name: Openhab-JRuby-Scripting

on:
  pull_request:
  push:
    branches:
      - main

env:
  RUBY_VERSION: 2.6.8
  JRUBY_VERSION: jruby-9.3.8.0
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  rubocop:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Rubocop
        run: bundle exec rubocop

  commit-lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4

  cucumber-lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Cucumber Lint
        run: bundle exec cuke_linter -p features/

  yard-coverage:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Yard Coverage
        run: |
          bundle exec yard stats --list-undoc
          bundle exec yard stats | grep "100.00% documented"

  openhab-matrix:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - id: set-matrix
        run: |
          JSON=$(bundle exec rake github:oh_versions)
          echo $JSON
          echo "::set-output name=matrix::$( echo "$JSON" )"

  openhab-setup:
    needs: [openhab-matrix]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix: ${{fromJson(needs.openhab-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Cache OpenHAB setup
        id: cache
        uses: actions/cache@v2
        with:
          path: tmp/
          key: OpenHAB-setup-${{ hashFiles('.bundlehash', 'Rakefile', 'rakelib/openhab.rake') }}-${{ matrix.openhab_version }}
      - name: Setup OpenHAB
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          OPENHAB_VERSION: ${{ matrix.openhab_version }}
        run: bundle exec rake openhab:setup

  rspec:
    needs: [openhab-matrix, openhab-setup]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix: ${{fromJson(needs.openhab-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.JRUBY_VERSION }}
          bundler-cache: true
      - uses: actions/setup-java@v1
        with:
          java-version: "11"
          java-package: jre
      - name: Restore OpenHAB setup
        uses: actions/cache@v2
        with:
          path: tmp/
          key: OpenHAB-setup-${{ hashFiles('.bundlehash', 'Rakefile', 'rakelib/openhab.rake') }}-${{ matrix.openhab_version }}
      - name: RSpec
        run: bundle exec rspec
        timeout-minutes: 2
      - name: Upload OpenHAB Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: OpenHAB-logs-rspec-${{ github.workflow }}-${{ github.run_number }}-${{ matrix.index }}
          path: tmp/openhab/runtime/logs
          retention-days: 2

  cucumber-matrix:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Remove env.rb file
        run: |
          rm features/support/env.rb
      - id: set-matrix
        run: |
          JSON=$(bundle exec rake github:matrix[20])
          echo $JSON
          echo "::set-output name=matrix::$( echo "$JSON" )"

  cucumber:
    needs: [cucumber-matrix, openhab-setup]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix: ${{fromJson(needs.cucumber-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - uses: actions/setup-java@v1
        with:
          java-version: "11"
          java-package: jre
      - name: Restore OpenHAB setup
        uses: actions/cache@v2
        with:
          path: tmp/
          key: OpenHAB-setup-${{ hashFiles('.bundlehash', 'Rakefile', 'rakelib/openhab.rake') }}-${{ matrix.openhab_version }}
      - name: Cucumber
        run: bundle exec rake "features[${{ matrix.features }}]"
      - name: Generate OpenHAB Dump
        run: bundle exec rake openhab:dump
        if: failure()
      - name: Upload OpenHAB Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: OpenHAB-logs-${{ github.workflow }}-${{ github.run_number }}-${{ matrix.index }}
          path: tmp/
          retention-days: 2

