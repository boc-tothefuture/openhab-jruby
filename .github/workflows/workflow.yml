
env:
  RUBY_VERSION: 2.5

name: Openhab Scripting Tests
on: [pull_request]
jobs:

 rubocop:
   runs-on: ubuntu-18.04
   continue-on-error: true
   steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-ruby@v1
       with:
         ruby-version: ${{ env.RUBY_VERSION }}
     - name: Install bundler
       run: gem install bundler -N
     - name: Gem Cache
       uses: actions/cache@v2
       with: 
        path: vendor/bundle
        key: gems-${{ hashFiles('**/Gemfile.lock') }}
     - name: Install gems
       run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
     - name: Rubocop 
       run: bundle exec rubocop

 cucumber-lint:
   runs-on: ubuntu-18.04
   continue-on-error: true
   steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-ruby@v1
       with:
         ruby-version: ${{ env.RUBY_VERSION }}
     - name: Install bundler
       run: gem install bundler -N       
     - name: Gem Cache
       uses: actions/cache@v2
       with: 
        path: vendor/bundle
        key: gems-${{ hashFiles('**/Gemfile.lock') }}
     - name: Install gems
       run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
     - name: Cucumber Lint 
       run: bundle exec cuke_linter
 

 openhab-setup:
   runs-on: ubuntu-18.04
   steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-ruby@v1
       with:
         ruby-version: ${{ env.RUBY_VERSION }}
     - uses: actions/setup-java@v1
       with:
         java-version: '11.0.8' 
         java-package: jre
     - name: Install bundler
       run: gem install bundler -N
     - name: Cache Gems 
       uses: actions/cache@v2
       with: 
        path: vendor/bundle
        key: gems-${{ hashFiles('**/Gemfile.lock') }}
     - name: Install gems
       run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
     - name: Cache OpenHAB setup
       uses: actions/cache@v2
       with: 
        path: tmp/
        key: OpenHAB-setup-${{ github.workflow }}-${{ github.run_number }}
     - name: Setup OpenHAB
       run: bundle exec rake openhab:setup
 
 cucumber-matrix:
   runs-on: ubuntu-18.04
   outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
   steps: 
     - uses: actions/checkout@v2
     - uses: actions/setup-ruby@v1
       with:
         ruby-version: ${{ env.RUBY_VERSION }}
     - id: set-matrix
       run: |
         JSON=$(ruby -e '
           require "json"
           feature_maps = Dir["features/**/*.feature"].map { |feature| { feature: File.basename(feature,".feature"), file: feature } } 
           include_map = {}
           include_map["include"]= feature_maps
           puts include_map.to_json
         ') 
         echo $JSON
         echo "::set-output name=matrix::$( echo "$JSON" )"

 cucumber:
    needs: [cucumber-matrix, openhab-setup]
    runs-on: ubuntu-18.04
    strategy:
      matrix:  ${{fromJson(needs.cucumber-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.8' 
          java-package: jre
      - name: Install bundler
        run: gem install bundler -N
      - name: Restore Gems 
        uses: actions/cache@v2
        with: 
          path: vendor/bundle
          key: gems-${{ hashFiles('**/Gemfile.lock') }}
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Restore OpenHAB setup
        uses: actions/cache@v2
        with: 
          path: tmp/
          key: OpenHAB-setup-${{ github.workflow }}-${{ github.run_number }}
      - name: Cucumber
        run: bundle exec rake features[${{ matrix.file }}]
      - name: Generate OpenHAB Dump
        run: bundle exec rake openhab:dump
        if: failure()
      - name: Upload OpenHAB Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: OpenHAB-logs-${{ github.workflow }}-${{ github.run_number }}-${{ matrix.feature }}
          path: |
            tmp/cucumber_logs
            tmp/karaf.log
            tmp/openhab/userdata/logs
            tmp/openhab/userdata/*.zip
            tmp/openhab/conf/automation/jsr223/ruby/personal/
          retention-days: 2
 release:
#   needs: cucumber 
   runs-on: ubuntu-18.04
   steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-ruby@v1
       with:
         ruby-version: ${{ env.RUBY_VERSION }}
     - name: Install bundler
       run: gem install bundler -N
     - name: Gem Cache
       uses: actions/cache@v2
       with: 
        path: vendor/bundle
        key: gems-${{ hashFiles('**/Gemfile.lock') }}
     - name: Install gems
       run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
     - name: Current Version 
       id: current_version
       run: echo "::set-output name=version::$( bundle exec rake version )" 
     - name: Get Previous tag
       id: previous_tag
       uses: "WyriHaximus/github-action-get-previous-tag@v1"
     - name: Execute Release
       if:  ${{ steps.previous_tag.outputs.tag != steps.current_version.version}}
       run: echo "New version detected, preparing release"


